//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.01 at 09:06:01 PM CET 
//


package org.xbrl._2003.instance;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.ACAPITALstring4FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring10VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring11FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring11VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring12VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring14VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring17VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring200VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring20VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring23VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring24VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring25VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring2FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring30VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring34VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring35VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring40VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring45VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring4FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring4VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring60VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring6930VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring6FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring6VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring70VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Anstring9VItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Astring1ItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Astring3FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.CustomDateItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.DateTimeItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.GYearItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.MessageReferenceSupplierVATItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.NonNegativeInteger3FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.NonNegativeInteger6FItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.NotificationNumberItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.Test11ItemType;
import nl.nltaxonomie._7_0_b_1.basis.bd.types.bd_types.VATIdentificationNumberNLItemType;


/**
 * <p>Java class for tokenItemType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tokenItemType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>token">
 *       &lt;attGroup ref="{http://www.xbrl.org/2003/instance}nonNumericItemAttrs"/>
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tokenItemType", propOrder = {
    "value"
})
@XmlSeeAlso({
    Anstring12VItemType.class,
    VATIdentificationNumberNLItemType.class,
    Astring1ItemType.class,
    Anstring9VItemType.class,
    Anstring200VItemType.class,
    Anstring23VItemType.class,
    Anstring11FItemType.class,
    Anstring10VItemType.class,
    Anstring11VItemType.class,
    CustomDateItemType.class,
    Anstring4VItemType.class,
    Anstring45VItemType.class,
    Anstring25VItemType.class,
    Anstring20VItemType.class,
    Anstring60VItemType.class,
    NonNegativeInteger6FItemType.class,
    Anstring70VItemType.class,
    Anstring6930VItemType.class,
    Anstring4FItemType.class,
    Anstring6FItemType.class,
    Test11ItemType.class,
    Anstring6VItemType.class,
    NotificationNumberItemType.class,
    GYearItemType.class,
    Anstring2FItemType.class,
    Anstring40VItemType.class,
    ACAPITALstring4FItemType.class,
    Anstring34VItemType.class,
    Anstring24VItemType.class,
    Anstring35VItemType.class,
    Anstring14VItemType.class,
    Anstring17VItemType.class,
    Astring3FItemType.class,
    DateTimeItemType.class,
    Anstring30VItemType.class,
    MessageReferenceSupplierVATItemType.class,
    NonNegativeInteger3FItemType.class
})
public class TokenItemType {

    @XmlValue
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String value;
    @XmlAttribute(required = true)
    @XmlIDREF
    @XmlSchemaType(name = "IDREF")
    protected Object contextRef;
    @XmlAttribute
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the contextRef property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getContextRef() {
        return contextRef;
    }

    /**
     * Sets the value of the contextRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setContextRef(Object value) {
        this.contextRef = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
