//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.17 at 01:15:21 PM CEST 
//


package nl.nltaxonomie._8_0_a_2.domein.bd.tuples.bd_bedr_tuples;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import nl.nltaxonomie._2011.xbrl.xbrl_syntax_extension.Placeholder;
import nl.nltaxonomie._8_0.basis.sbr.types.nl_types.MonetaryNoDecimalsItemType;
import nl.nltaxonomie._8_0_a_2.basis.bd.types.bd_types.Anstring11VItemType;
import nl.nltaxonomie._8_0_a_2.basis.bd.types.bd_types.Anstring45VItemType;
import nl.nltaxonomie.iso.iso3166.IsoCountryCodes3CharactersItemType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.nltaxonomie.nl/2011/xbrl/xbrl-syntax-extension}placeholder">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven}ExchangeRateExemptionMethod" minOccurs="0"/>
 *         &lt;element ref="{http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven}ExemptionMethodCountry" minOccurs="0"/>
 *         &lt;element ref="{http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven}ExemptionMethodForwardedProfitOrLossToOvertake" minOccurs="0"/>
 *         &lt;element ref="{http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven}ExemptionMethodProfitComponent" minOccurs="0"/>
 *         &lt;element ref="{http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven}ExemptionMethodProfitNationalCurrency" minOccurs="0"/>
 *         &lt;element ref="{http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven}ProfitEuroExemptionMethod" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "exchangeRateExemptionMethod",
    "exemptionMethodCountry",
    "exemptionMethodForwardedProfitOrLossToOvertake",
    "exemptionMethodProfitComponent",
    "exemptionMethodProfitNationalCurrency",
    "profitEuroExemptionMethod"
})
public class ForeignTaxExemptionMethodProfitSpecification
    extends Placeholder
{

    @XmlElement(name = "ExchangeRateExemptionMethod", namespace = "http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven")
    protected Anstring11VItemType exchangeRateExemptionMethod;
    @XmlElement(name = "ExemptionMethodCountry", namespace = "http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven")
    protected IsoCountryCodes3CharactersItemType exemptionMethodCountry;
    @XmlElement(name = "ExemptionMethodForwardedProfitOrLossToOvertake", namespace = "http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven")
    protected MonetaryNoDecimalsItemType exemptionMethodForwardedProfitOrLossToOvertake;
    @XmlElement(name = "ExemptionMethodProfitComponent", namespace = "http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven")
    protected Anstring45VItemType exemptionMethodProfitComponent;
    @XmlElement(name = "ExemptionMethodProfitNationalCurrency", namespace = "http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven")
    protected MonetaryNoDecimalsItemType exemptionMethodProfitNationalCurrency;
    @XmlElement(name = "ProfitEuroExemptionMethod", namespace = "http://www.nltaxonomie.nl/8.0.a.2/basis/bd/items/bd-bedrijven")
    protected MonetaryNoDecimalsItemType profitEuroExemptionMethod;

    /**
     * Gets the value of the exchangeRateExemptionMethod property.
     * 
     * @return
     *     possible object is
     *     {@link Anstring11VItemType }
     *     
     */
    public Anstring11VItemType getExchangeRateExemptionMethod() {
        return exchangeRateExemptionMethod;
    }

    /**
     * Sets the value of the exchangeRateExemptionMethod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Anstring11VItemType }
     *     
     */
    public void setExchangeRateExemptionMethod(Anstring11VItemType value) {
        this.exchangeRateExemptionMethod = value;
    }

    /**
     * Gets the value of the exemptionMethodCountry property.
     * 
     * @return
     *     possible object is
     *     {@link IsoCountryCodes3CharactersItemType }
     *     
     */
    public IsoCountryCodes3CharactersItemType getExemptionMethodCountry() {
        return exemptionMethodCountry;
    }

    /**
     * Sets the value of the exemptionMethodCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link IsoCountryCodes3CharactersItemType }
     *     
     */
    public void setExemptionMethodCountry(IsoCountryCodes3CharactersItemType value) {
        this.exemptionMethodCountry = value;
    }

    /**
     * Gets the value of the exemptionMethodForwardedProfitOrLossToOvertake property.
     * 
     * @return
     *     possible object is
     *     {@link MonetaryNoDecimalsItemType }
     *     
     */
    public MonetaryNoDecimalsItemType getExemptionMethodForwardedProfitOrLossToOvertake() {
        return exemptionMethodForwardedProfitOrLossToOvertake;
    }

    /**
     * Sets the value of the exemptionMethodForwardedProfitOrLossToOvertake property.
     * 
     * @param value
     *     allowed object is
     *     {@link MonetaryNoDecimalsItemType }
     *     
     */
    public void setExemptionMethodForwardedProfitOrLossToOvertake(MonetaryNoDecimalsItemType value) {
        this.exemptionMethodForwardedProfitOrLossToOvertake = value;
    }

    /**
     * Gets the value of the exemptionMethodProfitComponent property.
     * 
     * @return
     *     possible object is
     *     {@link Anstring45VItemType }
     *     
     */
    public Anstring45VItemType getExemptionMethodProfitComponent() {
        return exemptionMethodProfitComponent;
    }

    /**
     * Sets the value of the exemptionMethodProfitComponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link Anstring45VItemType }
     *     
     */
    public void setExemptionMethodProfitComponent(Anstring45VItemType value) {
        this.exemptionMethodProfitComponent = value;
    }

    /**
     * Gets the value of the exemptionMethodProfitNationalCurrency property.
     * 
     * @return
     *     possible object is
     *     {@link MonetaryNoDecimalsItemType }
     *     
     */
    public MonetaryNoDecimalsItemType getExemptionMethodProfitNationalCurrency() {
        return exemptionMethodProfitNationalCurrency;
    }

    /**
     * Sets the value of the exemptionMethodProfitNationalCurrency property.
     * 
     * @param value
     *     allowed object is
     *     {@link MonetaryNoDecimalsItemType }
     *     
     */
    public void setExemptionMethodProfitNationalCurrency(MonetaryNoDecimalsItemType value) {
        this.exemptionMethodProfitNationalCurrency = value;
    }

    /**
     * Gets the value of the profitEuroExemptionMethod property.
     * 
     * @return
     *     possible object is
     *     {@link MonetaryNoDecimalsItemType }
     *     
     */
    public MonetaryNoDecimalsItemType getProfitEuroExemptionMethod() {
        return profitEuroExemptionMethod;
    }

    /**
     * Sets the value of the profitEuroExemptionMethod property.
     * 
     * @param value
     *     allowed object is
     *     {@link MonetaryNoDecimalsItemType }
     *     
     */
    public void setProfitEuroExemptionMethod(MonetaryNoDecimalsItemType value) {
        this.profitEuroExemptionMethod = value;
    }

}
